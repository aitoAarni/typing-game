services:
    frontend:
        image: typing-frontend-production
        build:
            context: ./frontend
            dockerfile: Dockerfile
            args:
                - PROD_API_URL=${API_URL}
        environment:
            - NODE_ENV=production
        container_name: typing-frontend-production
        ports:
            - 5173:80

    backend:
        image: typing-backend-production
        build:
            context: ./backend
            dockerfile: Dockerfile

        environment:
            - NODE_ENV=production
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}
            - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - SECRET=${SECRET}
        container_name: typing-backend-production
        ports:
            - 3000:3000

    db:
        image: postgres:16
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - pgdata:/var/lib/postgresql/data

    nginx:
        image: nginx:1.25
        ports:
            - 8080:80
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        container_name: reverse-proxy-production
        depends_on:
            - frontend
            - backend
            - db

volumes:
    pgdata:
